version: '3.8'
services:
  zipline:
    container_name: ${SERVICE}
    image: ghcr.io/diced/zipline
    restart: unless-stopped
    volumes:
      - zipline_uploads:/zipline/uploads
      - zipline_public:/public:/zipline/public
    networks:
      - traefik
      - zipline
    labels:
      - traefik.enable=true
      - traefik.http.routers.${SERVICE}.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.${SERVICE}.entrypoints=https
      - traefik.http.routers.${SERVICE}.tls.certresolver=letsencrypt
      - traefik.http.services.${SERVICE}.loadbalancer.server.port=${PORT}
    environment:
      - CORE_HTTPS=false
      - CORE_SECRET=${CORE_SECRET}
      - CORE_HOST=0.0.0.0
      - CORE_PORT=3000
      - CORE_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_DATABASE}/postgres
      - CORE_LOGGER=true
    depends_on:
      - postgres

  postgres:
    container_name: ${SERVICE}-db
    image: postgres
    restart: unless-stopped
    volumes:
      - zipline_db:/var/lib/postgresql/data
    networks:
      - zipline
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  zipline_uploads:
    driver: local
  zipline_public:
    driver: local
  zipline_db:
    driver: local

networks:
  traefik:
    external: true
  zipline:
    external: true
